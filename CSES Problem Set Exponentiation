CSES Problem Set
Exponentiation

Code:
//#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <bitset>
#include <iomanip>
#include <random>
#include <ctime>

using namespace std;

typedef long long ll;

const ll MOD = 1e9 + 7;

ll powmod(ll a, ll b){
    a %= MOD;
    if (a == 0) return 0;
    ll product = 1;
    while(b > 0){
        if (b&1){    // you can also use b % 2 == 1
            product *= a;
            product %= MOD;
            --b;
        }
        a *= a;
        a %= MOD;
        b /= 2;    // you can also use b >> 1
    }
    return product;
}

void solve(int ca)
{
    ll a, b;
    cin >> a >> b;
    
    //Only exception is 0^0 which the problem has defined to be equal to 1
    if (a == 0 && b == 0) {
        cout << 1 << endl;
        return;
    }
    
    //Use the power mod function template to compute a^b mod 1e9+7
    cout << powmod(a, b) << endl;
    
    return;
}

int main()
{
    //mt19937 rng(0);
    
    //Fast IO
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    /*
    freopen("sabotage.in", "r", stdin);
    freopen("sabotage.out", "w", stdout);
    */

    int t = 1;
    cin >> t;

    int co = 1;
    while (t--) {
        solve(co);
        ++co;
    }
}
