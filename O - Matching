O - Matching
Educational DP Contest
Atcoder

Code:
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <bitset>
#include <iomanip>
#include <random>
#include <ctime>
using namespace std;

typedef long long ll;

ll max(ll a, ll b) {
    if (a > b) {
        return a;
    } else {
        return b;
    }
}

ll min(ll a, ll b) {
    if (a < b) {
        return a;
    } else {
        return b;
    }
}

const ll MAXN = 22;
const ll MAXM = 2097153;
const ll MOD = 1e9 + 7;

void solve(ll ca) {
    ll n;
    cin >> n;
    
    ll a[n][n];
    for (ll i = 0; i < n; i++) {
        for (ll j = 0; j < n; j++) {
            cin >> a[i][j];
        }
    }
    
    //dp[i][j] is the #of ways to match the first i men with a subset of i women represented in bitmask j
    ll dp[n+1][(1<<n)];
    for (ll i = 0; i <= n; i++) {
        for (ll j = 0; j < (1<<n); j++) {
            dp[i][j] = 0;
        }
    }
        
    //Base Case: The number of ways to pair 0 men with 0 women is 1: do nothing.
    dp[0][0] = 1;
    
    //Iterate over the men
    for (ll i = 1; i <= n; i++) {
        for (ll j = 0; j < (1<<n); j++) {
            ll cnt = 0;
            for (ll k = 0; k < n; k++) {
                if (j & (1<<k)) {
                    cnt++;
                }
            }
            
            //If the number of women isn't equal to the #of men, we can't pair everyone up
            if (cnt != i) {
                continue;
            }
            
            //We'll try to pair each on woman with the current man
            for (ll k = 0; k < n; k++) {
                if (j & (1<<k)) {
                    if (a[i-1][k] == 1) {
                        dp[i][j] = (dp[i][j]%MOD + dp[i-1][j^(1<<k)]%MOD)%MOD;
                    }
                }
            }
        }
    }
    
    //Print the answer pairing all n men with all n women
    cout << dp[n][(1<<n)-1] << endl;
}

int main() {
    mt19937 rng(0);
    // Fast IO
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
  /*
    freopen("nocross.in", "r", stdin);
    freopen("nocross.out", "w", stdout);
*/
    ll t = 1;
    //cin >> t;
    
    ll co = 0;
    while (t--) {
        solve(co);
        co++;
    }
}
