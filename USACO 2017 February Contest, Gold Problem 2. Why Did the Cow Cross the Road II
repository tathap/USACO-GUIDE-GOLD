USACO 2017 February Contest, Gold
Problem 2. Why Did the Cow Cross the Road II

Code:
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <set>
#include <map>
#include <string>
#include <tuple>
#include <numeric>
#include <climits>
#include <bitset>
#include <iomanip>
#include <random>
#include <ctime>
using namespace std;

typedef long long ll;

const ll MOD = 1e9 + 7;
const ll MAXN = 1005;
const ll INF = 1e14;


ll max(ll a, ll b) {
    if (a > b) {
        return a;
    } else {
        return b;
    }
}

ll min(ll a, ll b) {
    if (a < b) {
        return a;
    } else {
        return b;
    }
}

void solve(ll ca) {
    ll n; cin >> n;
    
    ll f1[n], f2[n];
    for (ll i = 0; i < n; i++) {
        cin >> f1[i];
    }
    for (ll i = 0; i < n; i++) {
        cin >> f2[i];
    }
    
    ll dp[n+1][n+1]; //dp[i][j] is the most #of disjoint crosswalks using the first i farms on the left and the first j farms on the right
    
    for (ll i = 0; i <= n; i++) {
        for (ll j = 0; j <= n; j++) {
            dp[i][j] = 0;
        }
    }

    for (ll i = 1; i <= n; i++) {
        for (ll j = 1; j <= n; j++) {
            //We can either use the previous values or connect farm i on the left with farm j on the right
            dp[i][j] = max(dp[i-1][j-1], max(dp[i-1][j], dp[i][j-1]));
            if (abs(f1[i-1] - f2[j-1]) <= 4) {
                dp[i][j] = max(dp[i][j], dp[i-1][j-1]+1);
            }
        }
    }
    
    //Print the best answer
    cout << dp[n][n] << endl;
}

int main() {
    mt19937 rng(0);
    // Fast IO
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
  
    freopen("nocross.in", "r", stdin);
    freopen("nocross.out", "w", stdout);

    ll t = 1;
    //cin >> t;
    
    ll co = 0;
    while (t--) {
        solve(co);
        co++;
    }
}
